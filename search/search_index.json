{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to SoccerViz","text":"<p>SoccerViz is a one-stop open-source Python library capable of extracting,manipulating &amp; plotting data making it easier for soccer fans &amp; analysts to gain insight beyond the goals</p>"},{"location":"#quick-start-guide","title":"Quick Start Guide","text":"<p>Use the package manager pip to install the package</p> <pre><code>'pip install SoccerViz'\n</code></pre> <p>**The package has three modules, each of which is attributed it's own functions, these three modules are:</p> <ul> <li>Extract : This module is responsible for extracting data from websites such as WhoScored and Understat granting access to data for users</li> <li>DataFilter : This module then filters &amp; manipulates data which can be then plotted or simply analyzed by the user</li> <li>Plot : This module plots the filtered data** </li> </ul>"},{"location":"#example-of-a-passnetwork-plotted-through-soccerviz","title":"Example of a PassNetwork plotted through SoccerViz","text":"<p>For full documentation visit SoccerViz GitHub Repo.</p>"},{"location":"#want-to-help","title":"Want to help?","text":"<p>It would be an absolute pleasure to have the users feedback to improve the end product, &amp; I am always ears to new ideas/features you guys would like me to add. Please do get in touch with me on my X (formerly Twitter) or LinkedIn</p>"},{"location":"#inspiration-credits","title":"Inspiration &amp; Credits","text":"<p>Mckay Johns</p> <p>MPL-Soccer Dev</p> <p>David Sumpter</p> <p>Liam Henshaw</p> <p>Ben Griffins</p> <p>Scott Willis</p> <p>Paddy at Attacking Football</p>"},{"location":"#contents","title":"Contents","text":"<ul> <li>Pass Network Maps</li> <li>ShotMaps</li> <li>Progressive Pass Maps</li> </ul>"},{"location":"Pass%20Network%20Map/","title":"Pass Network Maps","text":""},{"location":"Pass%20Network%20Map/#what-is-the-benefit-of-a-pass-network-map","title":"What is the benefit of a Pass Network Map?","text":"<p>A pass network map in soccer provides several benefits:</p> <p>-Visualizes Team Structure: Shows player positions and connections based on passing patterns, highlighting the team's shape and organization.</p> <p>-Identifies Key Players: Highlights players who are central to the team\u2019s passing network, indicating key playmakers and facilitators.</p> <p>-Analyzes Ball Movement: Reveals how the ball moves through different areas, helping identify strengths, weaknesses, and tactical preferences.</p> <p>Here's how you can plot Pass Networks of ANY game recorded on _WhoScored.com_with a few lines of code</p> <p>Import the SoccerViz Package &amp; Extract the \"Pass\" Event Data</p> <pre><code>#Import Extract Module from Library first to scrape data\nfrom SoccerViz import extract\n\n#This is an example URL from Whoscored.com\n\nurl = 'https://www.whoscored.com/Matches/1821060/Live/England-Premier-League-2024-2025-Aston-Villa-Arsenal'\n\n\n#Call the extract functions to get Pass Dataframe,Players Dataframe of the particular match\n\ndf = extract.pass_data(url) #df to store extracted pass data\nplayers_df = extract.player_data(url) #df to store player data of the match\n\n\n#You can find the TEAM Id's of the clubs on their WhoScored page html tags by clicking on the club logos\n\nhome_team_id=24 #Aston Villa Team ID\naway_team_id=13 #Arsenal Team ID\nhome_team_name = 'Aston Villa' ## Assign Home Team Name\naway_team_name = 'Arsenal'\n</code></pre> <p>Now Filter and Manipulate the Data using the 'datafilter' function easily</p> <pre><code>#Filter all the data according to the teams by calling the function into DataFrames(their names are pretty self explanatory)\n\n#You can use and call any dataframe you would like to analyze in raw tables and columns i.e. in a DataFrame form\npass_between_home,pass_between_away, avg_loc_home, avg_loc_away, \npasses_home, passes_away,df_prg_home,df_comp_prg_home,\ndf_uncomp_prg_home,df_prg_away,df_comp_prg_away,df_uncomp_prg_away = datafilter.analyze_passes(df, players_df, home_team_id, away_team_id)\n\n#All the DF (dataframe) labels are pretty self-explanatory\n</code></pre> <p>Finally after scrapping and filtering data you are ready to plot your Pass Network Map</p> <pre><code>#Call the function to plot\n\nplot = plot.pass_network(pass_between_home, pass_between_away, avg_loc_home,avg_loc_away,home_team_name,away_team_name)\n</code></pre>"},{"location":"Pass%20Network%20Map/#if-you-copied-the-code-exactly-this-should-be-your-output","title":"If you copied the code exactly, this should be your output.","text":""},{"location":"Progressive%20Pass%20Map/","title":"Progressive Pass Maps","text":"<p>Import the SoccerViz Package &amp; Extract the \"Pass\" Event Data</p> <pre><code>#Import Extract Module from Library first to scrape data\nfrom SoccerViz import extract\n\n#This is an example URL from Whoscored.com\n\nurl = 'https://www.whoscored.com/Matches/1821060/Live/England-Premier-League-2024-2025-Aston-Villa-Arsenal'\n\n\n#Call the extract functions to get Pass Dataframe,Players Dataframe of the particular match\n\ndf = extract.pass_data(url) #df to store extracted pass data\nplayers_df = extract.player_data(url) #df to store player data of the match\n\n\n#You can find the TEAM Id's of the clubs on their WhoScored page html tags by clicking on the club logos\n\nhome_team_id=24 #Aston Villa Team ID\naway_team_id=13 #Arsenal Team ID\nhome_team_name = 'Aston Villa' ## Assign Home Team Name\naway_team_name = 'Arsenal'\n</code></pre> <p>Now Filter and Manipulate the Data using the 'datafilter' function easily</p> <pre><code>#Filter all the data according to the teams by calling the function into DataFrames(their names are pretty self explanatory)\n\n#You can use and call any dataframe you would like to analyze in raw tables and columns i.e. in a DataFrame form\npass_between_home,pass_between_away, avg_loc_home, avg_loc_away, \npasses_home, passes_away,df_prg_home,df_comp_prg_home,\ndf_uncomp_prg_home,df_prg_away,df_comp_prg_away,df_uncomp_prg_away = datafilter.analyze_passes(df, players_df, home_team_id, away_team_id)\n\n#All the DF (dataframe) labels are pretty self-explanatory\n</code></pre> <p>Finally after scrapping and filtering data you are ready to plot your Pass Network Map</p> <p><pre><code>#Call the function and put in home and away team names\nplot = plot.prg_passes(df_comp_prg_home, df_uncomp_prg_home, df_comp_prg_away, df_uncomp_prg_away, home_team_name,\n                away_team_name)\n</code></pre> </p>"},{"location":"Shot%20Map/","title":"Shot Maps","text":""},{"location":"Shot%20Map/#what-is-the-benefit-of-a-shotmap","title":"What is the benefit of a ShotMap?","text":"<p>-Visualizes Shooting Patterns: Displays the location, type, and outcome of shots, helping to identify where a team or player is most effective.</p> <p>-Assesses Attacking Efficiency: Helps analyze how effectively a team or player converts opportunities into goals.</p> <p>-Identifies Weaknesses: Reveals areas where a team or player might struggle to generate quality chances or convert them.</p> <p>*Here's how you can plot ShotMaps of ANY game recorded on understat.com with a few lines of code*</p> <p>Import the SoccerViz Package &amp; Extract \"Shot\" Event Data</p> <pre><code>from SoccerViz import plot,extract,datafilter\n\n#Example is from the Aston Villa v. Arsenal Game\n\nunderstat_url = 'https://understat.com/match/26618'  #Copy Link of the Understat URL\nhome_df,away_df = extract.shots(understat_url)\nhome_team_name = 'Aston Villa'\naway_team_name = 'Arsenal'\n</code></pre> <p>Now filter the shots into dataframes which you can also call on to analyze in a raw table form</p> <pre><code>#Filter all the data according to the teams by calling the function into DataFrames(their names are pretty self explanatory)\n\ndf1_missed,df2_missed,df1_saved,df2_saved,df1_goal,df2_goal,df1_block,df2_block,totalxG1,totalxG2=datafilter.analyze_shots(home_df,away_df)\n</code></pre> <p>Now simply call in the function to plot the ShotMap</p> <pre><code>plot = plot.shot_map(df1_missed, df2_missed, df1_saved, df2_saved, df1_goal, df2_goal, df1_block, df2_block, home_team_name,\n             away_team_name,totalxG1, totalxG2)\n</code></pre> <p></p>"}]}